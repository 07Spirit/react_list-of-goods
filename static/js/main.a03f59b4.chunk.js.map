{"version":3,"sources":["components/GoodList.tsx","App.tsx","index.tsx"],"names":["GoodList","goods","map","good","App","state","sortType","isReversed","this","visibleGoods","goodsFromServer","sort","g1","g2","localeCompare","length","reverse","className","type","classNames","onClick","setState","button","hidden","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iRAAaA,EAA0C,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACrD,mCACE,6BAEIA,EAAMC,KAAI,SAACC,GAAD,OACR,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,WCOrBC,EAAb,4MACEC,MAAQ,CACNC,SAAU,OACVC,YAAY,GAHhB,4CAME,WAAU,IAAD,OACP,EAAiCC,KAAKH,MAA9BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WACZE,EAAY,YAAOC,GAoBzB,OAlBAD,EAAaE,MAAK,SAACC,EAAIC,GACrB,OAAQP,GACN,IAAK,WACH,OAAOM,EAAGE,cAAcD,GAE1B,IAAK,SACH,OAAOD,EAAGG,OAASF,EAAGE,OAGxB,QACE,OAAO,MAITR,GACFE,EAAaO,UAIb,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IACE,SACA,UACA,CAAE,WAAoC,aAAxBX,KAAKH,MAAMC,WAG7Bc,QAAS,kBAAM,EAAKC,SAAS,CAAEf,SAAU,cAT3C,iCAcA,wBACEY,KAAK,SACLD,UACEE,IACE,SACA,aACA,CAAE,WAAoC,WAAxBX,KAAKH,MAAMC,WAG7Bc,QAAS,kBAAM,EAAKC,SAAS,CAAEf,SAAU,YAT3C,4BAcA,wBACEY,KAAK,SACLD,UACEE,IACE,SACA,aACA,CAAE,YAAaX,KAAKH,MAAME,aAG9Ba,QAAS,kBAAM,EAAKC,UAAS,SAAChB,GAC5B,MAAQ,CACNE,YAAaF,EAAME,gBAXzB,qBAkBA,wBACEW,KAAK,SACLD,UAAWE,IACT,YACA,WACA,CACEG,QAAkC,IAA1Bd,KAAKH,MAAME,YACU,SAAxBC,KAAKH,MAAMC,WAGpBc,QAAS,kBAAM,EAAKC,SAAS,CAC3Bd,YAAY,EACZD,SAAU,UAEZiB,QAAM,EAdR,sBAoBF,6BACE,cAAC,EAAD,CAAUtB,MAAOQ,aAlG3B,GAAyBe,IAAMC,WCT/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.a03f59b4.chunk.js","sourcesContent":["export const GoodList: React.FC<{ goods: string[] }> = ({ goods }) => (\n  <>\n    <ul>\n      {\n        goods.map((good) => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))\n      }\n    </ul>\n  </>\n);\n","import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport goodsFromServer from './server/goodsFromServer.json';\nimport { GoodList } from './components/GoodList';\n\ntype State = {\n  sortType: string,\n  isReversed: boolean,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    sortType: 'NONE',\n    isReversed: false,\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const visibleGoods = [...goodsFromServer];\n\n    visibleGoods.sort((g1, g2) => {\n      switch (sortType) {\n        case 'ALPHABET':\n          return g1.localeCompare(g2);\n\n        case 'LENGTH':\n          return g1.length - g2.length;\n\n        case 'NONE':\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={\n              classNames(\n                'button',\n                'is-info',\n                { 'is-light': this.state.sortType !== 'ALPHABET' },\n              )\n            }\n            onClick={() => this.setState({ sortType: 'ALPHABET' })}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              classNames(\n                'button',\n                'is-success',\n                { 'is-light': this.state.sortType !== 'LENGTH' },\n              )\n            }\n            onClick={() => this.setState({ sortType: 'LENGTH' })}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              classNames(\n                'button',\n                'is-warning',\n                { 'is-light': !this.state.isReversed },\n              )\n            }\n            onClick={() => this.setState((state) => {\n              return ({\n                isReversed: !state.isReversed,\n              });\n            })}\n          >\n            Reverse\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'is-danger',\n              'is-light',\n              {\n                button: this.state.isReversed === true\n                  || this.state.sortType !== 'NONE',\n              },\n            )}\n            onClick={() => this.setState({\n              isReversed: false,\n              sortType: 'NONE',\n            })}\n            hidden\n          >\n            Reset\n          </button>\n        </div>\n\n        <ul>\n          <GoodList goods={visibleGoods} />\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}