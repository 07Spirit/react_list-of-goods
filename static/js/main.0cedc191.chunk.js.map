{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","g1","g2","ALPHABET","localeCompare","LENGTH","length","NONE","reverse","App","state","handleSortEvent","type","setState","handleReverseEvent","this","isReset","className","classNames","onClick","goodsFromServer","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAMKA,E,gHAgBE,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAoBzB,OAlBAG,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQL,GACN,KAAKH,EAASS,SACZ,OAAOF,EAAGG,cAAcF,GAE1B,KAAKR,EAASW,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OAExB,KAAKZ,EAASa,KACd,QACE,OAAO,MAITT,GACFC,EAAaS,UAGRT,G,SAxCJL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA2CE,IAAMe,EAAb,4MACEC,MAAQ,CACNb,SAAUH,EAASa,KACnBT,YAAY,GAHhB,EAMEa,gBAAkB,SAACC,GACjB,OAAQA,GACN,KAAKlB,EAASa,KACZ,EAAKM,SAAS,CACZhB,SAAUH,EAASa,KACnBT,YAAY,IAEd,MAEF,KAAKJ,EAASS,SACd,KAAKT,EAASW,OACZ,EAAKQ,SAAS,CACZhB,SAAUe,MAlBpB,EA2BEE,mBAAqB,WACnB,EAAKD,UAAS,SAACH,GACb,MAAO,CACLZ,YAAaY,EAAMZ,gBA9B3B,4CAmCE,WAAU,IAAD,OACP,EAAiCiB,KAAKL,MAA9Bb,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WACZkB,EAAUnB,IAAaH,EAASa,MAAQT,EAE9C,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEL,KAAK,SACLK,UAAWC,IAAW,SAAU,UAAW,CACzC,WAAYH,KAAKL,MAAMb,WAAaH,EAASS,WAE/CgB,QAAS,kBAAM,EAAKR,gBAAgBjB,EAASS,WAL/C,iCAUA,wBACES,KAAK,SACLK,UAAWC,IAAW,SAAU,aAAc,CAC5C,WAAYH,KAAKL,MAAMb,WAAaH,EAASW,SAE/Cc,QAAS,kBAAM,EAAKR,gBAAgBjB,EAASW,SAL/C,4BAUA,wBACEO,KAAK,SACLK,UAAWC,IAAW,SAAU,aAAc,CAC5C,YAAaH,KAAKL,MAAMZ,aAE1BqB,QAASJ,KAAKD,mBALhB,qBAUCE,GAEC,wBACEJ,KAAK,SACLK,UAAU,4BACVE,QAAS,kBAAM,EAAKR,gBAAgBjB,EAASa,OAH/C,sBAUJ,6BACGZ,EAAkByB,EAAiBL,KAAKL,OAAOW,KAAI,SAACC,GAAD,OAClD,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,eAtFpC,GAAyBC,IAAMC,WC9C/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.0cedc191.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport goodsFromServer from './server/goodsFromServer.json';\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype State = {\n  sortType: SortType;\n  isReversed: boolean;\n};\n\ntype ReorderOptions = {\n  sortType: SortType;\n  isReversed: boolean;\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n\n      case SortType.NONE:\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  handleSortEvent = (type: SortType) => {\n    switch (type) {\n      case SortType.NONE:\n        this.setState({\n          sortType: SortType.NONE,\n          isReversed: false,\n        });\n        break;\n\n      case SortType.ALPHABET:\n      case SortType.LENGTH:\n        this.setState({\n          sortType: type,\n        });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  handleReverseEvent = () => {\n    this.setState((state) => {\n      return {\n        isReversed: !state.isReversed,\n      };\n    });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const isReset = sortType !== SortType.NONE || isReversed;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames('button', 'is-info', {\n              'is-light': this.state.sortType !== SortType.ALPHABET,\n            })}\n            onClick={() => this.handleSortEvent(SortType.ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button', 'is-success', {\n              'is-light': this.state.sortType !== SortType.LENGTH,\n            })}\n            onClick={() => this.handleSortEvent(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button', 'is-warning', {\n              'is-light': !this.state.isReversed,\n            })}\n            onClick={this.handleReverseEvent}\n          >\n            Reverse\n          </button>\n\n          {isReset\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => this.handleSortEvent(SortType.NONE)}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {getReorderedGoods(goodsFromServer, this.state).map((good) => (\n            <li data-cy=\"Good\" key={good}>{good}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}